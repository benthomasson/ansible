---
- name: Create a user with all role attributes
  become_user: "{{ pg_user }}"
  become: True
  postgresql_user:
    name: "{{ db_user1 }}"
    state: "present"
    role_attr_flags: "SUPERUSER,CREATEROLE,CREATEDB,INHERIT,login"
    login_user: "{{ pg_user }}"
    db: postgres

- name: Check that the user has the requested role attributes
  become_user: "{{ pg_user }}"
  become: True
  shell: echo "select 'super:'||rolsuper, 'createrole:'||rolcreaterole, 'create:'||rolcreatedb, 'inherit:'||rolinherit, 'login:'||rolcanlogin from pg_roles where rolname='{{ db_user1 }}';" | psql -d postgres
  register: result

- assert:
    that:
      - "result.stdout_lines[-1] == '(1 row)'"
      - "'super:t' in result.stdout_lines[-2]"
      - "'createrole:t' in result.stdout_lines[-2]"
      - "'create:t' in result.stdout_lines[-2]"
      - "'inherit:t' in result.stdout_lines[-2]"
      - "'login:t' in result.stdout_lines[-2]"

- name: Modify a user to have no role attributes
  become_user: "{{ pg_user }}"
  become: True
  postgresql_user:
    name: "{{ db_user1 }}"
    state: "present"
    role_attr_flags: "NOSUPERUSER,NOCREATEROLE,NOCREATEDB,noinherit,NOLOGIN"
    login_user: "{{ pg_user }}"
    db: postgres
  register: result

- name: Check that ansible reports it modified the role
  assert:
    that:
      - "result.changed == True"

- name: Check that the user has the requested role attributes
  become_user: "{{ pg_user }}"
  become: True
  shell: echo "select 'super:'||rolsuper, 'createrole:'||rolcreaterole, 'create:'||rolcreatedb, 'inherit:'||rolinherit, 'login:'||rolcanlogin from pg_roles where rolname='{{ db_user1 }}';" | psql -d postgres
  register: result

- assert:
    that:
      - "result.stdout_lines[-1] == '(1 row)'"
      - "'super:f' in result.stdout_lines[-2]"
      - "'createrole:f' in result.stdout_lines[-2]"
      - "'create:f' in result.stdout_lines[-2]"
      - "'inherit:f' in result.stdout_lines[-2]"
      - "'login:f' in result.stdout_lines[-2]"

- name: Modify a single role attribute on a user
  become_user: "{{ pg_user }}"
  become: True
  postgresql_user:
    name: "{{ db_user1 }}"
    state: "present"
    role_attr_flags: "LOGIN"
    login_user: "{{ pg_user }}"
    db: postgres
  register: result

- name: Check that ansible reports it modified the role
  assert:
    that:
      - "result.changed == True"

- name: Check that the user has the requested role attributes
  become_user: "{{ pg_user }}"
  become: True
  shell: echo "select 'super:'||rolsuper, 'createrole:'||rolcreaterole, 'create:'||rolcreatedb, 'inherit:'||rolinherit, 'login:'||rolcanlogin  from pg_roles where rolname='{{ db_user1 }}';" | psql -d postgres
  register: result

- assert:
    that:
      - "result.stdout_lines[-1] == '(1 row)'"
      - "'super:f' in result.stdout_lines[-2]"
      - "'createrole:f' in result.stdout_lines[-2]"
      - "'create:f' in result.stdout_lines[-2]"
      - "'inherit:f' in result.stdout_lines[-2]"
      - "'login:t' in result.stdout_lines[-2]"
